name: Build and Push Multi-arch Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: komeo-mqtt

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        target: [x86_64-unknown-linux-musl, aarch64-unknown-linux-musl]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross (optional, only if you want to use cross for build)
      run: cargo install cross

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: ${{ matrix.platform }}
        push: false   # We'll push the manifest after
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ matrix.platform }}
        build-args: |
          TARGET=${{ matrix.target }}

  create-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Create and push multi-arch manifest
      run: |
        docker buildx imagetools create \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest \
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:linux/amd64 \
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:linux/arm64
        docker buildx imagetools inspect ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
